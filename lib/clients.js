// Generated by CoffeeScript 1.4.0
(function() {
  var ClientBase,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __slice = [].slice;

  ClientBase = (function() {

    function ClientBase(options) {
      this.options = options;
      this.handleOptions = __bind(this.handleOptions, this);

      this.handleOptions();
      this.log('Inited');
    }

    ClientBase.prototype.log = function() {
      var args, _ref;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return (_ref = this.options).log.apply(_ref, ["" + this.constructor.name + "> "].concat(__slice.call(args)));
    };

    ClientBase.prototype.handleOptions = function() {
      var _base, _base1, _base2, _ref, _ref1, _ref2;
      if ((_ref = (_base = this.options).log) == null) {
        _base.log = console.log;
      }
      if ((_ref1 = (_base1 = this.options).login) == null) {
        _base1.login = process.env.USER;
      }
      if ((_ref2 = (_base2 = this.options).location) == null) {
        _base2.location = require('os').hostname() || '-';
      }
      if (!(this.options.password != null)) {
        throw new Error('password is not specified');
      }
      return this.log('handleOptions');
    };

    return ClientBase;

  })();

  module.exports = {
    base: ClientBase
  };

}).call(this);
